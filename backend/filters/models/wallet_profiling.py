from django.db import models


class WalletProfiling(models.Model):
    wallet = models.TextField(blank=False, null=False, primary_key=True)
    total_mints = models.IntegerField(blank=True, null=True)
    total_bought = models.IntegerField(blank=True, null=True)
    total_sold = models.IntegerField(blank=True, null=True)
    eth_invested = models.FloatField(blank=True, null=True)
    eth_sell_revenue = models.FloatField(blank=True, null=True)
    nfts_per_mint = models.FloatField(blank=True, null=True)
    days_bw_mints = models.FloatField(blank=True, null=True)
    floor_net_worth = models.FloatField(blank=True, null=True)
    net_profit = models.FloatField(blank=True, null=True)
    current_nfts_held = models.IntegerField(blank=True, null=True)
    current_collections_held = models.IntegerField(blank=True, null=True)
    day_1 = models.IntegerField(db_column='1_day', blank=True, null=True)
    week_1 = models.IntegerField(db_column='1_week', blank=True, null=True)
    month_1 = models.IntegerField(db_column='1_month', blank=True, null=True)
    month_3 = models.IntegerField(db_column='3_month', blank=True, null=True)
    month_6 = models.IntegerField(db_column='6_month', blank=True, null=True)
    hodling = models.IntegerField(blank=True, null=True)
    biggest_buy_collection = models.TextField(blank=True, null=True)
    biggest_buy_price = models.FloatField(blank=True, null=True)
    biggest_sell_collection = models.TextField(blank=True, null=True)
    biggest_sell_price = models.FloatField(blank=True, null=True)
    hodling_collection = models.TextField(blank=True, null=True)
    hodling_collection_since = models.IntegerField(blank=True, null=True)
    favorite_collection = models.TextField(blank=True, null=True)
    favorite_collection_bought = models.IntegerField(blank=True, null=True)
    tot_mint_value = models.FloatField(blank=True, null=True)
    tot_bought_value = models.FloatField(blank=True, null=True)
    incoming_transfers = models.IntegerField(blank=True, null=True)
    outgoing_transfers = models.IntegerField(blank=True, null=True)
    mints_per_month = models.IntegerField(blank=True, null=True)
    active_for = models.IntegerField(blank=True, null=True)
    buys_per_month = models.FloatField(blank=True, null=True)
    avg_buy_price = models.FloatField(blank=True, null=True)
    sells_per_month = models.FloatField(blank=True, null=True)
    avg_sell_price = models.FloatField(blank=True, null=True)
    nfts_per_buy = models.FloatField(blank=True, null=True)
    nfts_per_sell = models.FloatField(blank=True, null=True)
    ens_held = models.IntegerField(blank=True, null=True)
    diamond_hand_collection = models.TextField(blank=True, null=True)
    diamond_hand_gain = models.FloatField(blank=True, null=True)
    paper_hand_collection = models.TextField(blank=True, null=True)
    paper_hand_loss = models.FloatField(blank=True, null=True)
    rekt_meter = models.IntegerField(blank=True, null=True)
    mint_achievement = models.TextField(blank=True, null=True)
    is_dengen = models.BooleanField(blank=True, null=True)
    is_whale_wallet = models.BooleanField(blank=True, null=True)
    is_smart_trader = models.BooleanField(blank=True, null=True)
    is_sweeper = models.BooleanField(blank=True, null=True)
    is_active_wallet = models.BooleanField(blank=True, null=True)
    is_creator = models.BooleanField(blank=True, null=True)
    hodl_achievement = models.TextField(blank=True, null=True)
    bluechip_achievement = models.TextField(blank=True, null=True)
    biggest_buy_token = models.TextField(blank=True, null=True)
    biggest_sell_token = models.TextField(blank=True, null=True)
    hodling_token = models.TextField(blank=True, null=True)
    paper_hand_token = models.TextField(blank=True, null=True)
    diamond_hand_token = models.TextField(blank=True, null=True)
    trader_achievement = models.TextField(blank=True, null=True)
    avg_mint_price = models.FloatField(blank=True, null=True)
    final_score = models.FloatField(blank=True, null=True)
    nfts_ever_held = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'wallet_profiling'
